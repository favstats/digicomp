---
title: ""
format:
  html:
    theme: lumen
    page-layout: full
    self-contained: true
    code-fold: true
    code-overflow: wrap
    html-math-method: mathjax
    include-after-body:
      text: |
        <script>
          document.addEventListener("DOMContentLoaded", function () {
              var toc = document.createElement("div");
              toc.id = "custom-toc";
              toc.style.position = "fixed";
              toc.style.top = "0";
              toc.style.right = "-300px";  // Start hidden
              toc.style.width = "260px";
              toc.style.height = "100%";
              toc.style.background = "white";
              toc.style.padding = "10px";
              toc.style.boxShadow = "0px 2px 5px rgba(0, 0, 0, 0.2)";
              toc.style.transition = "right 0.3s ease-in-out";
              toc.style.overflowY = "auto";
          
              var tocTitle = document.createElement("h3");
              tocTitle.innerText = "Navigation";
              toc.appendChild(tocTitle);
          
              var headers = document.querySelectorAll("h2, h3, h4");
              headers.forEach(function (header, index) {
                  if (!header.id) {
                      header.id = "section-" + index;
                  }
          
                  var link = document.createElement("a");
                  link.innerText = header.innerText;
                  link.href = "#" + header.id;
                  link.style.display = "block";
                  link.style.padding = "5px 0";
                  link.style.color = "#007bff";
                  link.style.textDecoration = "none";
          
                  toc.appendChild(link);
              });
          
              document.body.appendChild(toc);
          
              // Create toggle button (ðŸ“‘ icon)
              var button = document.createElement("button");
              button.id = "toggle-toc";
              button.innerHTML = "ðŸ“‘";
              button.style.position = "fixed";
              button.style.top = "15px";
              button.style.right = "15px";
              button.style.backgroundColor = "white";
              button.style.color = "#333";
              button.style.border = "2px solid #ccc"; // Slightly thicker border
              button.style.padding = "10px 12px"; // Increased padding
              button.style.cursor = "pointer";
              button.style.borderRadius = "8px"; // More rounded
              button.style.fontSize = "22px"; // Larger icon
              button.style.zIndex = "1000";
              button.style.boxShadow = "0px 3px 6px rgba(0, 0, 0, 0.2)";
              button.style.width = "50px"; // Increase button size
              button.style.height = "50px"; // Make it square
          
              document.body.appendChild(button);
          
              // Click event to toggle the ToC
              button.addEventListener("click", function () {
                  if (toc.style.right === "0px") {
                      toc.style.right = "-300px"; // Hide ToC
                  } else {
                      toc.style.right = "0px"; // Show ToC
                  }
              });
          });
          document.addEventListener("DOMContentLoaded", function () {
              document.querySelectorAll("a[href='https://favstats.github.io/de25/']").forEach(function(link) {
                  link.addEventListener("click", function(event) {
                      event.preventDefault(); // Prevent default behavior
                      window.open(link.href, "_blank"); // Open in a new tab/window
                  });
              });
          });
        </script>
    includes:
      in-header: |
        <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

---

```{r, echo = F, warning=F, message=F}
## this is important to keep for some reason ##
library(tippy)
tippy_this(
  elementId = "firstNavItem",
  tooltip = "Your tooltip text here...",
  animation = "scale",
  duration = 1000,
  placement = "bottom"
)
```

<!-- De pagina is verdeeld in vier hoofdsecties:  -->


<!-- ```{=html} -->
<!-- <center> -->
<!-- <div class="button-container"> -->
<!-- ``` -->

<!-- <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 1rem; margin-bottom: 2rem;"> -->

<!-- <a href="#iconify-fluent-text-grammar-settings-20-regular-strategic-information-skills" class="buttontop"> -->
<!--   {{< iconify fluent text-grammar-settings-20-regular >}} Strategic Information Skills -->
<!-- </a> -->

<!-- <a href="#iconify-material-symbols-light-interactive-space-outline-rounded-critical-information-skills" class="buttontop"> -->
<!--   {{< iconify material-symbols-light interactive-space-outline-rounded >}} Critical Information Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-netiquette-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Netiquette Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-digital-content-creation-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Digital Content Creation Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-safety-and-control-of-information-and-devices-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Safety and Control of Information and Devices Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-digital-health-and-wellbeing-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Digital Health and Wellbeing Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-sustainablegreen-digital-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Sustainable/Green Digital Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-digital-problem-solving-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Digital Problem Solving Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-transactional-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} Transactional Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-ai-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} AI Skills -->
<!-- </a> -->

<!-- <a href="#iconify-lets-icons-view-light-genai-skills" class="buttontop"> -->
<!--   {{< iconify lets-icons view-light >}} genAI Skills -->
<!-- </a> -->


<!-- </div> -->

<!-- ```{=html} -->
<!-- </div> -->
<!-- </center> -->
<!-- ``` -->


Je kunt algemene trends onderzoeken in de verschillende secties, met de mogelijkheid om te differentiÃ«ren  naar leeftijd, geslacht, opleidingsniveau en politieke voorkeur.  

```{r setup, include=FALSE}
# here::i_am("wtm_gb.Rproj")


## Global options
knitr::opts_chunk$set(
    cache = F,
    echo = F,
    warning = F,
    message = F,
    cache.lazy = FALSE
)


pacman::p_load(htmltools, tidyverse, highcharter, gt, gtExtras, rvest, haven)

options(scipen = 999)

source("utils.R")

data <- read_csv("../../data/df.csv") %>% #table()
  mutate(age_groups = case_when(
    Age %in% 16:17 ~ "16-17",
    Age %in% 18:24 ~ "18-24",
    Age %in% 25:34 ~ "25-34",
    Age %in% 35:44 ~ "35-44",
    Age %in% 45:54 ~ "45-54",
    Age %in% 55:64 ~ "55-64",
    Age %in% 65:150 ~ "65+",
  )) %>%
  mutate(weging_GAMO = str_replace(weging_GAMO, ",", ".") %>% as.numeric)
```



# {{< iconify fluent text-grammar-settings-20-regular >}} Strategic Information {.tabset .tabset-fade .tabset-pills .break}


## Skills, Performance, and Knowledge

> This shows the three competencies for *Strategic Information*

::: {.panel-tabset}

### Algemeen

```{r}

var_labels <- c(
  "Skills",
  "Performance",
  "Knowledge"
)

thevarlabs <- var_labels

categories_dat <- c("(Completely) True (4-5)", "Not true and not untrue (3)", "(Completely) Untrue (1-2)")

# debugonce(viz_general)
viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat, weight_var = "weging_GAMO")


# media_rec
# 
# media_rec %>%
#       # mutate(key = fct_relevel(key, theorder)) %>%
#       arrange(key) %>%
#       hchart("bar", hcaes(x = key, y = perc, group = value))  %>% 
#       hc_plotOptions(bar = list(stacking = "percent")) %>%
#       hc_yAxis(title = list(text = ""), max = 100) %>%
#       hc_colors(colors) %>%
#       hc_xAxis(title = list(text = "")) %>%
#       hc_legend(enabled = TRUE) 
# 
# fin  %>% 
#       gather(key, value, -weight_var) %>% 
#       mutate(value = case_when(
#         value %in% range1 ~ categories_dat[3],
#         value %in% range2 ~ categories_dat[2],
#         value %in% range3 ~ categories_dat[1]
#       )) %>% 
#       group_by(key) %>% 
#       count(value, wt = weight_var) %>% 
#       ungroup() 
```



### Op Leeftijd 

::: {.panel-tabset}

```{r, results='asis', eval = T}


viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat,
            "age_groups",
            T,
            weight_var = "weging_GAMO")

```



::: 

### Op Geslacht

::: {.panel-tabset}


```{r, results='asis', eval = T}



viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat,
            "geslacht",
            T,
            weight_var = "weging_GAMO")
```

::: 

### Op Opleiding

::: {.panel-tabset}


```{r, results='asis', eval = T}

viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat,
            "Education",
            T,
            weight_var = "weging_GAMO")
```

::: 

### Op Politiek

::: {.panel-tabset}

```{r, results='asis', eval = F}

viz_general(vecc("DIGIQ", 1:5), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T)
```


::: 


::: 


## Over Time

> This shows the three competencies for *Strategic Information*

::: {.panel-tabset}

### Skills


```{r, results='asis'}
viz_wave_change <- function(vars, var_labels, categories_dat, wavevar,
                            range1 = 1:2, range2 = 3, range3 = 4:5,
                            weight_var = NULL) {
  
  # Prepare data
  fin <- data %>%
    select(all_of(vars), wave = !!sym(wavevar), weight = !!sym(weight_var)) %>%
    drop_na() %>%
    set_names(c(var_labels, "wave", "weight"))
  
  media_wave <- fin %>%
    pivot_longer(cols = all_of(var_labels), names_to = "key", values_to = "value") %>%
    mutate(
      value = case_when(
        value %in% range1 ~ categories_dat[3],
        value %in% range2 ~ categories_dat[2],
        value %in% range3 ~ categories_dat[1],
        TRUE ~ NA_character_
      ),
      value = fct_relevel(value, categories_dat)
    ) %>%
    drop_na(value) %>%
    count(wave, key, value, wt = weight) %>%
    group_by(wave, key) %>%
    mutate(perc = n / sum(n) * 100) %>%
    ungroup()
  
  # Order variables by category3 in latest wave
  latest_wave <- max(media_wave$wave)
  theorder <- media_wave %>%
    filter(wave == latest_wave, value == categories_dat[3]) %>%
    arrange(desc(perc)) %>%
    pull(key) %>%
    unique()

  # Plot one line chart per variable (key)
  hcs <- map(theorder, function(varkey) {
    media_wave %>%
      filter(key == varkey) %>%
      hchart("line", hcaes(x = as.character(wave), y = perc, group = value)) %>%
      hc_title(text = varkey) %>%
      hc_colors(colors) %>%
      hc_xAxis(title = list(text = "Wave")) %>%
      hc_yAxis(title = list(text = "Percentage"), max = max(media_wave$perc)+5) %>%
      hc_tooltip(
        shared = TRUE,
        valueDecimals = 1,
        valueSuffix = "%"
      ) %>%
      hc_plotOptions(
        line = list(
          dataLabels = list(
            enabled = TRUE,
            format = '{y:.0f}%',
            style = list(fontSize = '10px')
          ),
          marker = list(enabled = TRUE)
        )
      ) %>%
      hc_legend(enabled = TRUE) %>%
      hc_caption(
        text = paste0("<em>N = ", nrow(fin), ".</em>"),
        align = "right",
        style = list(fontSize = '10px', color = 'lightgrey')
      ) %>%
      hc_exporting(enabled = TRUE, buttons = list(contextButton = list(menuItems = myMenuItems)))
  })
  
  return(hcs)
}

# viz_wave_change

categories_dat <- c("(Completely) True (4-5)", "Not true and not untrue (3)", "(Completely) Untrue (1-2)")

data <- data %>% 
  mutate(wave = 1) %>% 
  bind_rows(
    data %>% 
      mutate(wave = 2)  %>%
  mutate(
    SInfo1N = pmin(pmax(SInfo1N + sample(c(-2, 1, 2), n(), replace = TRUE, prob = c(0.2, 0.6, 0.2)), 1), 5),
    SInfo3_V2N = pmin(pmax(SInfo3_V2N + sample(c(-2, 1, 2), n(), replace = TRUE, prob = c(0.25, 0.5, 0.25)), 1), 5),
    SInfo4N = pmin(pmax(SInfo4N + sample(c(-2, -1, 1, 2), n(), replace = TRUE, prob = c(0.05, 0.25, 0.5, 0.2)), 1), 5)
  )

  )

# debugonce(viz_general)
graphics <- viz_wave_change(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat, weight_var = "weging_GAMO", wavevar = "wave")

graphics %>% 
  .[[1]]


```
### Performance

```{r}
graphics %>% 
  .[[2]]

```

### Knowledge

```{r}
graphics %>% 
  .[[3]]
```


::: 

:::


## By Survey Type

> This shows *Strategic Information* for each survey type


::: {.panel-tabset}

### Algemeen

```{r}

var_labels <- c(
  "Paper + Online",
  "Paper",
  "Online"
)

thevarlabs <- var_labels

categories_dat <- c("(Completely) True (4-5)", "Not true and not untrue (3)", "(Completely) Untrue (1-2)")

# debugonce(viz_general)
viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat, weight_var = "weging_GAMO")


```



### Op Leeftijd 

::: {.panel-tabset}

```{r, results='asis', eval = T}


viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat,
            "age_groups",
            T,
            weight_var = "weging_GAMO")

```



::: 

### Op Geslacht

::: {.panel-tabset}


```{r, results='asis', eval = T}



viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat,
            "geslacht",
            T,
            weight_var = "weging_GAMO")
```

::: 

### Op Opleiding

::: {.panel-tabset}


```{r, results='asis', eval = T}

viz_general(c("SInfo1N", "SInfo3_V2N", "SInfo4N"), 
            var_labels, 
            categories_dat,
            "Education",
            T,
            weight_var = "weging_GAMO")
```

::: 

### Op Politiek

::: {.panel-tabset}

```{r, results='asis', eval = F}

viz_general(vecc("DIGIQ", 1:5), 
            var_labels,
            categories_dat, 
            "pol_cat",
            T)
```


::: 

:::

<center>
<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/26/Ministerie_van_Binnenlandse_Zaken_en_Koninkrijksrelaties_Logo.jpg/1200px-Ministerie_van_Binnenlandse_Zaken_en_Koninkrijksrelaties_Logo.jpg" width="33%">
</center>